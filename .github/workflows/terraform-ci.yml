name: Terraform CI

on:
  push:
    branches: [main, develop]
    paths:
      - "iac/terraform/**"
      - ".github/workflows/terraform-ci.yml"
  pull_request:
    branches: [main]
    paths:
      - "iac/terraform/**"
      - ".github/workflows/terraform-ci.yml"

permissions:
  contents: read
  security-events: write
  id-token: write

jobs:
  tf-validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: iac/terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.1

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::027378719919:role/GitHubDeploy-Kiro # USER MUST UPDATE THIS
          aws-region: us-east-1

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TFC_TOKEN }}
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

  tf-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: [tf-validate]
    defaults:
      run:
        working-directory: iac/terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.1

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::027378719919:role/GitHubDeploy-Kiro
          aws-region: us-east-1

      - name: Terraform Init
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TFC_TOKEN }}
        run: terraform init

      - name: Terraform Plan
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TFC_TOKEN }}
        run: terraform plan -out=tfplan

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: iac/terraform/tfplan

  tf-lint:
    name: Terraform Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: iac/terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4

      - name: Run TFLint
        run: tflint --init && tflint

  tf-security:
    name: Terraform Security Scan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: iac/terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Checkov
        run: pip install checkov

      - name: Run Checkov Security Scan
        run: |
          checkov -d . --output-file-path checkov-results.sarif --output sarif || true

      - name: Upload Checkov SARIF
        uses: actions/upload-artifact@v4
        with:
          name: checkov-sarif
          path: iac/terraform/checkov-results.sarif

  tf-upload-sarif:
    name: Upload Security Results
    runs-on: ubuntu-latest
    needs: [tf-security]

    steps:
      - name: Download Checkov SARIF
        uses: actions/download-artifact@v4
        with:
          name: checkov-sarif
          path: ./

      - name: Upload SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: checkov-results.sarif
