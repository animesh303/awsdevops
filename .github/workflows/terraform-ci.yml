name: Terraform CI

on:
  push:
    branches: [main, develop]
    paths:
      - "iac/terraform/**"
      - ".github/workflows/terraform-ci.yml"
  pull_request:
    branches: [main]
    paths:
      - "iac/terraform/**"
      - ".github/workflows/terraform-ci.yml"

permissions:
  contents: read
  security-events: write
  id-token: write

jobs:
  tf-validate:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: iac/terraform
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.1
          
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}
          
      - name: Configure Terraform Cloud
        env:
          TFC_TOKEN: ${{ secrets.TFC_TOKEN }}
        run: |
          cat > $HOME/.terraformrc << EOF
          credentials "app.terraform.io" {
            token = "$TFC_TOKEN"
          }
          EOF
          
      - name: Terraform Format Check
        run: terraform fmt -check -recursive
        
      - name: Terraform Init
        run: terraform init
        
      - name: Terraform Validate
        run: terraform validate

  tf-plan:
    runs-on: ubuntu-latest
    needs: [tf-validate]
    defaults:
      run:
        working-directory: iac/terraform
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.1
          
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}
          
      - name: Configure Terraform Cloud
        env:
          TFC_TOKEN: ${{ secrets.TFC_TOKEN }}
        run: |
          cat > $HOME/.terraformrc << EOF
          credentials "app.terraform.io" {
            token = "$TFC_TOKEN"
          }
          EOF
          
      - name: Terraform Init
        run: terraform init
        
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        
      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: iac/terraform/tfplan

  tf-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: iac/terraform
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        
      - name: Run TFLint
        run: tflint --init && tflint

  tf-security:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: iac/terraform
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Checkov (SARIF)
        run: |
          pip install checkov
          checkov -d . --output-file-path checkov-results.sarif --output sarif || true
          
      - name: Upload SARIF Artifact
        uses: actions/upload-artifact@v4
        with:
          name: checkov-sarif
          path: iac/terraform/checkov-results.sarif

  tf-upload-sarif:
    runs-on: ubuntu-latest
    needs: [tf-security]
    steps:
      - name: Download SARIF Artifact
        uses: actions/download-artifact@v4
        with:
          name: checkov-sarif
          path: ./
          
      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: checkov-results.sarif