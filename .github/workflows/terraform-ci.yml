name: Terraform CI

on:
  push:
    branches: [main, develop]
    paths:
      - "iac/terraform/**"
      - ".github/workflows/terraform-ci.yml"
  pull_request:
    branches: [main]
    paths:
      - "iac/terraform/**"
      - ".github/workflows/terraform-ci.yml"

permissions:
  contents: read
  security-events: write
  id-token: write

jobs:
  tf-validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ~1.1
    
    - name: Configure Terraform Cloud
      env:
        TFC_TOKEN: ${{ secrets.TFC_TOKEN }}
      run: |
        cat > $HOME/.terraformrc << EOF
        credentials "app.terraform.io" {
          token = "$TFC_TOKEN"
        }
        EOF
    
    - name: Configure AWS credentials via OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: ${{ vars.AWS_REGION }}
    
    - name: Terraform Format Check
      run: |
        cd iac/terraform
        terraform fmt -check -recursive
    
    - name: Terraform Init
      run: |
        cd iac/terraform
        terraform init
    
    - name: Terraform Validate
      run: |
        cd iac/terraform
        terraform validate

  tf-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: [tf-validate]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ~1.1
    
    - name: Configure Terraform Cloud
      env:
        TFC_TOKEN: ${{ secrets.TFC_TOKEN }}
      run: |
        cat > $HOME/.terraformrc << EOF
        credentials "app.terraform.io" {
          token = "$TFC_TOKEN"
        }
        EOF
    
    - name: Configure AWS credentials via OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: ${{ vars.AWS_REGION }}
    
    - name: Terraform Init
      run: |
        cd iac/terraform
        terraform init
    
    - name: Terraform Plan
      run: |
        cd iac/terraform
        terraform plan

  tf-lint:
    name: Terraform Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: latest
    
    - name: Run TFLint
      run: |
        cd iac/terraform
        tflint --init
        tflint --format compact

  tf-security:
    name: Terraform Security
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install Checkov
      run: |
        pip install checkov
    
    - name: Run Checkov (SARIF)
      run: |
        cd iac/terraform
        checkov -d . --output-file-path checkov-results.sarif --output sarif
      continue-on-error: true
    
    - name: Upload Checkov SARIF
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: iac/terraform/checkov-results.sarif
        category: checkov