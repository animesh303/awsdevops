name: Terraform Deploy to dev

on:
  workflow_run:
    workflows: ["Terraform CI"]
    types: [completed]
    branches: [develop]

permissions:
  contents: read
  id-token: write

concurrency:
  group: deploy-terraform-${{ github.ref }}-${{ github.workflow }}-dev
  cancel-in-progress: false

jobs:
  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    environment: dev
    defaults:
      run:
        working-directory: iac/terraform
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.1

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::027378719919:role/GitHubDeploy-Kiro
          aws-region: us-east-1

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: iac/terraform/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Terraform Init
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TFC_TOKEN }}
        run: terraform init

      - name: Terraform Apply
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TFC_TOKEN }}
        run: terraform apply -input=false tfplan

      - name: Upload Website Files to S3
        run: |
          BUCKET_NAME=$(terraform output -raw website_bucket_name)
          aws s3 cp ../../src/website/ s3://$BUCKET_NAME/ --recursive

      - name: Output Website URL
        run: |
          echo "Website URL: $(terraform output -raw website_url)"