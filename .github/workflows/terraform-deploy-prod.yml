name: Terraform Deploy to prod

on:
  workflow_run:
    workflows: ["Terraform Deploy to test"]
    types: [completed]
    branches: [main]

permissions:
  contents: read
  id-token: write

concurrency:
  group: deploy-terraform-${{ github.ref }}-${{ github.workflow }}-prod
  cancel-in-progress: false

jobs:
  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    environment: prod
    defaults:
      run:
        working-directory: iac/terraform
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~1.1

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::027378719919:role/GitHubDeploy-Kiro
          aws-region: us-east-1

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: iac/terraform/
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Terraform Init
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TFC_TOKEN }}
        run: terraform init

      - name: Terraform Apply
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TFC_TOKEN }}
        run: terraform apply -input=false tfplan

      - name: Upload Website Files to S3
        run: |
          BUCKET_NAME=$(terraform output -raw website_bucket_name)
          aws s3 cp ../../src/website/ s3://$BUCKET_NAME/ --recursive

      - name: Production Health Check
        run: |
          # Verify website is accessible
          WEBSITE_URL=$(terraform output -raw website_url)
          curl -f $WEBSITE_URL || exit 1
          
          # Verify all AWS services are healthy
          TABLE_NAME=$(terraform output -raw dynamodb_table_name)
          aws dynamodb describe-table --table-name $TABLE_NAME
          
          QUEUE_URL=$(terraform output -raw sqs_queue_url)
          aws sqs get-queue-attributes --queue-url $QUEUE_URL

      - name: Notify Deployment Success
        run: |
          echo "ðŸš€ Production deployment successful!"
          echo "Website URL: $(terraform output -raw website_url)"
          echo "DynamoDB Table: $(terraform output -raw dynamodb_table_name)"
          echo "SQS Queue: $(terraform output -raw sqs_queue_name)"