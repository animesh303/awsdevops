name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      confirm_deployment:
        description: 'Type "deploy" to confirm production deployment'
        required: true
        default: ''
  release:
    types: [published]

env:
  AWS_REGION: us-west-2
  TF_VERSION: 1.5.0
  ENVIRONMENT: production

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    if: github.event.inputs.confirm_deployment == 'deploy' || github.event_name == 'release'
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Terraform Init
      run: terraform init
    
    - name: Terraform Plan
      run: terraform plan -var="project_name=aws-sample-prod" -out=tfplan
      env:
        TF_VAR_key_pair_name: ${{ secrets.TF_VAR_KEY_PAIR_NAME }}
    
    - name: Manual Approval
      uses: trstringer/manual-approval@v1
      with:
        secret: ${{ github.TOKEN }}
        approvers: ${{ github.actor }}
        minimum-approvals: 1
        issue-title: "Production Deployment Approval"
    
    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
    
    - name: Get outputs
      id: terraform-outputs
      run: |
        echo "ec2_ip=$(terraform output -raw ec2_public_ip)" >> $GITHUB_OUTPUT
        echo "lambda_name=$(terraform output -raw lambda_function_name)" >> $GITHUB_OUTPUT
    
    - name: Validate deployment
      run: |
        echo "Validating production deployment..."
        curl -f http://${{ steps.terraform-outputs.outputs.ec2_ip }} || exit 1
        
        aws lambda invoke --function-name ${{ steps.terraform-outputs.outputs.lambda_name }} response.json
        cat response.json
    
    - name: Notify deployment
      run: |
        echo "âœ… Production deployment completed successfully!"
        echo "EC2 IP: ${{ steps.terraform-outputs.outputs.ec2_ip }}"
        echo "Lambda: ${{ steps.terraform-outputs.outputs.lambda_name }}"